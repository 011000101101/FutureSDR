on: [push, pull_request]

name: CI

jobs:
  lints:
    name: Lints
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Install ZeroMQ
        run: sudo apt-get install -y libzmq3-dev

      - name: Install alsalibs
        run: sudo apt-get -y install libasound2-dev

      - name: Install LTTng
        run: sudo apt-get -y install liblttng-ust-dev

      - name: Install Soapy
        run: sudo apt-get -y install libsoapysdr-dev

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --workspace --features=vulkan,zeromq,audio,flow_scheduler,tpb_scheduler,soapy --exclude fir_latency --exclude null_rand_latency -- -D warnings

  test-linux:
    name: Unit Tests Linux
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Install ZeroMQ
        run: sudo apt-get install -y libzmq3-dev

      - name: Install alsalibs
        run: sudo apt-get -y install libasound2-dev

      - name: Install LTTng
        run: sudo apt-get -y install liblttng-ust-dev

      - name: Install Soapy
        run: sudo apt-get -y install libsoapysdr-dev

      - name: Run cargo tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --bins --examples --tests --workspace --features=zeromq,audio,flow_scheduler,tpb_scheduler,soapy --exclude androidfs --exclude fir_latency --exclude null_rand_latency -- --nocapture --skip vulkan

      - name: Run cargo benches
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --benches --workspace --features=zeromq,audio,flow_scheduler,tpb_scheduler,soapy --exclude androidfs --exclude fir_latency --exclude null_rand_latency -- --nocapture

  test-macos:
    name: Unit Tests macOS
    runs-on: macos-latest
    env:
      RUST_BACKTRACE: full
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Run cargo tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --bins --examples --tests --workspace --exclude androidfs --exclude androidhw --exclude fm-receiver --exclude fir_latency --exclude null_rand_latency --exclude zeromq --exclude audio --exclude rx-to-file --exclude zigbee --features=flow_scheduler,tpb_scheduler -- --nocapture --skip vulkan

      - name: Run cargo benches
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --benches --workspace --exclude androidfs --exclude androidhw --exclude fm-receiver --exclude fir_latency --exclude null_rand_latency --exclude zeromq --exclude audio --exclude rx-to-file --exclude zigbee --features=flow_scheduler,tpb_scheduler -- --nocapture

  test-windows:
    name: Unit Test Windows
    runs-on: windows-latest
    env:
      RUST_BACKTRACE: full
    steps:
      - name: Ninja Install
        uses: crazy-max/ghaction-chocolatey@v1.3.1
        with:
          args: install ninja

      - name: Python3 Install
        uses: crazy-max/ghaction-chocolatey@v1.3.1
        with:
            args: install python3 --params "/InstallAllUsers"

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Run cargo tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --bins --examples --tests --workspace --exclude androidfs --exclude androidhw --exclude fm-receiver --exclude fir_latency --exclude null_rand_latency --exclude zeromq --exclude perf-zynq --exclude audio --exclude rx-to-file --exclude zigbee --features=flow_scheduler,tpb_scheduler -- --nocapture --skip vulkan

      - name: Run cargo benches
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --benches --workspace --exclude androidfs --exclude androidhw --exclude fm-receiver --exclude fir_latency --exclude null_rand_latency --exclude zeromq --exclude perf-zynq --exclude audio --exclude rx-to-file --exclude zigbee --features=flow_scheduler,tpb_scheduler -- --nocapture
